/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  11155420: {
    Prompt: {
      address: "0x24c86fc7ea808b11af4582705237698d6ed67d24",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_aiOracle",
              type: "address",
              internalType: "contract IAIOracle",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "aiOracle",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IAIOracle",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "aiOracleCallback",
          inputs: [
            {
              name: "requestId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "output",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "callbackData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "calculateAIResult",
          inputs: [
            {
              name: "modelId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "prompt",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "requestId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "callbackGasLimit",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint64",
              internalType: "uint64",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "estimateFee",
          inputs: [
            {
              name: "modelId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getAIResult",
          inputs: [
            {
              name: "modelId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "prompt",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isFinalized",
          inputs: [
            {
              name: "requestId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "prompts",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "requests",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "modelId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "input",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "output",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setCallbackGasLimit",
          inputs: [
            {
              name: "modelId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "gasLimit",
              type: "uint64",
              internalType: "uint64",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "promptRequest",
          inputs: [
            {
              name: "requestId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "sender",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "modelId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "prompt",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "promptsUpdated",
          inputs: [
            {
              name: "requestId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "modelId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "input",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "output",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "callbackData",
              type: "bytes",
              indexed: false,
              internalType: "bytes",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "UnauthorizedCallbackSource",
          inputs: [
            {
              name: "expected",
              type: "address",
              internalType: "contract IAIOracle",
            },
            {
              name: "found",
              type: "address",
              internalType: "contract IAIOracle",
            },
          ],
        },
      ],
      inheritedFunctions: {
        aiOracle: "lib/OAO/contracts/AIOracleCallbackReceiver.sol",
        aiOracleCallback: "lib/OAO/contracts/AIOracleCallbackReceiver.sol",
        isFinalized: "lib/OAO/contracts/AIOracleCallbackReceiver.sol",
      },
    },
    BetFactory: {
      address: "0x4bb60201775ef1bc1031af0f8756939b4bfc5f66",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_prompt",
              type: "address",
              internalType: "contract Prompt",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "betCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "bets",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "betAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "requestId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum BetFactory.SolveStatus",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "createBet",
          inputs: [
            {
              name: "params",
              type: "tuple",
              internalType: "struct Bet.BetParams",
              components: [
                {
                  name: "name",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "description",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "prompt",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "endTimestamp",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "betAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getBet",
          inputs: [
            {
              name: "betId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "prompt",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract Prompt",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "requestsToBets",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "resolveBet",
          inputs: [
            {
              name: "requestId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_result",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "solveBet",
          inputs: [
            {
              name: "betId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "event",
          name: "BetCreated",
          inputs: [
            {
              name: "betAddress",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "betId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "params",
              type: "tuple",
              indexed: false,
              internalType: "struct Bet.BetParams",
              components: [
                {
                  name: "name",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "description",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "prompt",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "endTimestamp",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
